#Changes
#=======
#Version 0.2:
#Can now vary the sensitivity function so that the high point can be at any value or set of contiguous values. The function is no longer a gamma function, it is defined as a trapezoid or some variant.  This is described in more detail below.  4 parameters are required to define the sensitivity function. The new makeSensitivityFunction takes a set of parameters and creates a function that maps sensitivity to the scale of 0 to 100.  "makeSensitivityFunction" can be used to display the shape of a sensitivity function defined by a set of parameters.
#There are 3 input tables required to define a model.  These are 1) a relationships table which is an adjacency matrix describing the causal effects between concepts and their relative magnitude, 2) a table which includes the parameters describing the sensitivity functions for the concepts, and 3) a table of starting values for the concepts and the initial changes to the concepts.
#A new function (createFuzzyModel) reads in the 3 tables and makes a list containing all of the information needed to define a fuzzy model.  The runFuzzyModel function takes a fuzzy model that is so created as an object and returns the result of running the fuzzy model.
#Added a transportation example of the relationships between freeway supply, congestion, VMT, travel time, and metropolitan area density.
#Version 0.3:
#Added more error checks to input values in the createFuzzyModel function.  Added check that no starting changes can be less than -100.  Error thrown if that occurs.  Warning given identifying any starting values of 0 (values will not increase if they are 0).  Identify any starting changes that would cause the first iteration concept value to exceed 100.  Revise those starting changes so that 100 will not be exceeded and give warning. 
#Version 0.4:
#Corrected code in the runFuzzyModel function which caused errors in some particular cases. The function now catches situations where the value of a concept becomes 0 and the change in value is NaN (0/0). The code now catches this error and assigns 0 as the change in value in this situation. The second code change corrects the test for stopping model iteration. It had been when the net change to a node is less than 0.001. This caused premature stopping when the net change is negative. The stopping criterion is now when the absolute value of the net change is less than 0.001.
